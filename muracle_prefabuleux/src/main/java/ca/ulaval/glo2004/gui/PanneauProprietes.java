package ca.ulaval.glo2004.gui;

import ca.ulaval.glo2004.domain.Controleur;
import ca.ulaval.glo2004.domain.ListableDTO;
import ca.ulaval.glo2004.domain.ProprieteDTO;
import java.util.List;
import javax.swing.JPanel;
import ca.ulaval.glo2004.domain.IChangementSelectionObservateur;
import ca.ulaval.glo2004.gui.util.TableProprietesModel;
import java.awt.Component;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

public class PanneauProprietes extends JPanel implements IChangementSelectionObservateur, TableModelListener {
    private Component parent;
    private Controleur controleur;
    private ListableDTO objetSelectionne;

    
    public PanneauProprietes() {
        initComponents();
    }
    
    public PanneauProprietes(Component parent, Controleur controleur) {
        this();
        
        this.parent = parent;
        this.controleur = controleur;
        
        controleur.ajouterObservateurChangementSelection(this);
        
        TableProprietesModel model = new TableProprietesModel();
        model.addTableModelListener(this);
        tableProprietes.setModel(model);
        
        tableProprietes.putClientProperty("terminateEditOnFocusLost", true);
    }
    
    public void getObjetSelectionne() {
        if(tableProprietes.isEditing())
            tableProprietes.getCellEditor().cancelCellEditing();
        
        objetSelectionne = this.controleur.getObjetSelectionne();
        
        TableProprietesModel model = (TableProprietesModel) tableProprietes.getModel();
        
        model.clear();
        
        if(objetSelectionne != null) {
            List<ProprieteDTO> proprietes = objetSelectionne.getProprietesModifiablesUtilisateur();
            
            model.ajouter(proprietes);
        }
    }

    @Override
    public void onObjetSelectionneChange() {
        getObjetSelectionne();
    }
    
    @Override
    public void tableChanged(TableModelEvent evt) {
        if(evt.getType() == TableModelEvent.UPDATE) {
            TableProprietesModel model = (TableProprietesModel) tableProprietes.getModel();
            List<ProprieteDTO> proprietes = model.getProprietes();

            if(!proprietes.isEmpty()) {
                try {
                    objetSelectionne.setProprietes(proprietes);

                    MainWindow.afficherErreur(controleur.modifierObjetSelectionne(objetSelectionne));
                    
                    getObjetSelectionne();
                    parent.repaint();
                } catch (IllegalAccessException | IllegalArgumentException | NoSuchFieldException e) {
                    System.err.println("Erreur de modification" + e.toString());
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableProprietes = new ca.ulaval.glo2004.gui.util.TableProprietes();

        setLayout(new java.awt.BorderLayout());

        tableProprietes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nom", "Valeur"
            }
        ));
        jScrollPane1.setViewportView(tableProprietes);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private ca.ulaval.glo2004.gui.util.TableProprietes tableProprietes;
    // End of variables declaration//GEN-END:variables


}
